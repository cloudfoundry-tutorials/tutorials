---
resource_types:

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

resources:

- name: slack
  type: slack-notification
  source:
    url: ((slack_webhook_url))

- name: tutorial-source
  type: git
  source:
    uri: https://github.com/cloudfoundry-tutorials/((source_repo_name)).git
    branch: main
    username: ((github_username))
    password: ((github_password))

- name: ci-source
  type: git
  source:
    uri: https://github.com/cloudfoundry-tutorials/tutorials.git
    branch: main
    username: ((github_username))
    password: ((github_password))
    paths: [ci/tutorial/*]

- name: theme-source
  type: git
  source:
    uri: https://github.com/cloudfoundry-tutorials/hugo-whisper-theme.git
    branch: main
    username: ((github_username))
    password: ((github_password))

- name: version
  type: semver
  source:
    driver: s3
    initial_version: 0.0.1
    bucket: tutorials.cff.rscale.io
    key: ((source_repo_name))/version
    access_key_id: ((aws_access_key_id))
    secret_access_key: ((aws_secret_access_key))
    region_name: us-west-2

- name: rc
  type: s3
  source:
    regexp: ((source_repo_name))/rc/((source_repo_name))-(.*).zip
    bucket: tutorials.cff.rscale.io
    access_key_id: ((aws_access_key_id))
    secret_access_key: ((aws_secret_access_key))
    region_name: us-west-2

- name: artifact
  type: s3
  source:
    regexp: ((source_repo_name))/((source_repo_name))-(.*).zip
    bucket: tutorials.cff.rscale.io
    access_key_id: ((aws_access_key_id))
    secret_access_key: ((aws_secret_access_key))
    region_name: us-west-2

- name: deploy-staging
  type: cf
  source:
    api: ((cf_api_staging))
    username: ((cf_username_staging))
    password: ((cf_password_staging))
    organization: ((cf_org_staging))
    space: ((cf_space_staging))

- name: deploy-production
  type: cf
  source:
    api: ((cf_api_production))
    username: ((cf_username_production))
    password: ((cf_password_production))
    organization: ((cf_org_production))
    space: ((cf_space_production))

jobs:

- name: build
  serial_groups: [version]
  plan:
  - in_parallel:
    - get: tutorial-source
      trigger: true
      params: {depth: 1}
    - get: theme-source
      trigger: true
      params: {depth: 1}
    - get: ci-source
      params: {depth: 1}
    - get: version
      params: {pre: rc}
  - task: build
    file: ci-source/ci/tutorial/tasks/build.yml
    params:
      TITLE: ((title))
      SOURCE_REPO_NAME: ((source_repo_name))
      META_DESCRIPTION: ((meta_description))
  - put: rc
    params: {file: site/*.zip}
  - put: version
    params: {file: version/version}

- name: deploy-staging
  serial_groups: [staging]
  plan:
  - in_parallel:
    - get: rc
      trigger: true
      passed: [build]
    - get: ci-source
      params: {depth: 1}  
  - put: deploy-staging
    params:
      manifest:  ci-source/ci/tutorial/manifest.yml
      path: rc/*.zip
      current_app_name: ((source_repo_name))
      vars:
        app_name: ((source_repo_name))
        base_route: tutorials-staging.cloudfoundry.org
  on_success:
    put: slack
    params:
      username: "rscale-ci"
      text: "CFF tutorial deployed to staging at https://cff-tutorials-staging.cfapps.io/((source_repo_name))"
  on_failure:
    put: slack
    params:
      username: "rscale-ci"
      text: "FAILED to deploy CFF tutorial to staging: https://ci.aws.rscale.io/teams/cff-tutorials/pipelines/((source_repo_name))"

- name: promote
  serial_groups: [version]
  plan:
  - in_parallel:
    - get: rc
      passed: [deploy-staging]
    - get: version
      params: {bump: final}
    - get: ci-source
      params: {depth: 1}   
  - task: promote
    file: ci-source/ci/tutorial/tasks/promote.yml
    params:
      SOURCE_REPO_NAME: ((source_repo_name))
  - put: artifact
    params: {file: artifact/*.zip}
  - put: version
    params: {bump: patch}

- name: deploy-production
  serial_groups: [staging]
  plan:
  - in_parallel:
    - get: artifact
      trigger: true
      passed: [promote]
    - get: ci-source
      params: {depth: 1}  
  - put: deploy-production
    params:
      manifest:  ci-source/ci/tutorial/manifest.yml
      path: artifact/*.zip
      current_app_name: ((source_repo_name))
      vars:
        app_name: ((source_repo_name))
        base_route: tutorials.cloudfoundry.org
  on_success:
    put: slack
    params:
      username: "rscale-ci"
      text: "CFF tutorial deployed to production at https://tutorials.cloudfoundry.org/((source_repo_name))"
  on_failure:
    put: slack
    params:
      username: "rscale-ci"
      text: "FAILED to deploy CFF tutorial to production: https://ci.aws.rscale.io/teams/cff-tutorials/pipelines/((source_repo_name))"



# - name: minor
#   serial_groups: [version]
#   plan:
#     - put: version
#       params: {bump: minor, pre: rc}

# - name: major
#   serial_groups: [version]
#   plan:
#     - put: version
#       params: {bump: major, pre: rc}
